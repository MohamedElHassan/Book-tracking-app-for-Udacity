{"version":3,"sources":["BooksAPI.js","SearchBar.js","BookRow.js","BookTable.js","BookShelves.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","SearchBar","_this$props","this","props","searchValue","BooksSearchQuery","onSearch","onChangeShelf","react_default","a","createElement","className","react_router_dom","to","value","onChange","e","target","type","placeholder","length","map","Book","key","style","width","height","backgroundImage","imageLinks","smallThumbnail","disabled","title","authors","join","Component","BookRow","BookTable","AllBooks","src_BookRow","filter","BookShelves","state","SearchValue","flip","handleSearch","_this","setState","BooksAPI","_loop","i","j","index","findIndex","ChangeShelf","updateIndex","b","updatedBookList","push","currentState","_this2","react_router","exact","path","render","src_SearchBar","src_BookTable","ReactDOM","src_BookShelves","document","getElementById"],"mappings":"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","file":"static/js/main.3e9dd033.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SearchBar extends Component {\r\n  // Please if there is any notes or any improvement, please tell me.\r\n  //I really appreciate your reviewing to my app , I hope you like it.\r\n  //I promise I'm improving myself and I will be better and better.\r\n  //I will not give up at all.In the next project will be way improved than this\r\n  //Thank you so much Udacity reviewer, and thanks to Udacity, it helped me alot:D .\r\n  render() {\r\n    const {\r\n      searchValue,\r\n      BooksSearchQuery,\r\n      onSearch,\r\n      onChangeShelf\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link to=\"/\" className=\"close-search\">\r\n              Close\r\n            </Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                value={searchValue}\r\n                onChange={e => onSearch(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Search by title or author\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n              {BooksSearchQuery &&\r\n                BooksSearchQuery.length > 0 &&\r\n                BooksSearchQuery.map(Book => (\r\n                  <li key={Book.id}>\r\n                    <div className=\"book\">\r\n                      <div className=\"book-top\">\r\n                        <div\r\n                          className=\"book-cover\"\r\n                          style={{\r\n                            width: 128,\r\n                            height: 192,\r\n                            backgroundImage:\r\n                              Book.imageLinks && Book.imageLinks.smallThumbnail\r\n                                ? `url(${Book.imageLinks.smallThumbnail})`\r\n                                : \"no Image\"\r\n                          }}\r\n                        />\r\n                        <div className=\"book-shelf-changer\">\r\n                          <select\r\n                            onChange={e => {\r\n                              onChangeShelf(e.target.value, Book);\r\n                            }}\r\n                            value={Book.shelf ? Book.shelf : \"none\"}\r\n                          >\r\n                            <option value=\"move\" disabled>\r\n                              Move to...\r\n                            </option>\r\n                            <option value=\"currentlyReading\">\r\n                              Currently Reading\r\n                            </option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"book-title\">{Book.title}</div>\r\n                      <div className=\"book-authors\">\r\n                        {(Book.authors && Book.authors.length) > 1\r\n                          ? Book.authors.join(\", \")\r\n                          : Book.authors}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n        <div />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSearchBar.propTypes = {\r\n  AllBooks: PropTypes.array.isRequired,\r\n  searchValue: PropTypes.string.isRequired,\r\n  BooksSearchQuery: PropTypes.array.isRequired,\r\n  onSearch: PropTypes.func.isRequired,\r\n  onChangeShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BookRow extends Component {\r\n  render() {\r\n    const { Book, onChangeShelf, title } = this.props;\r\n    // Please if there is any notes or any improvement, please tell me.\r\n    //I really appreciate your reviewing to my app , I hope you like it.\r\n    //I promise I'm improving myself and I will be better and better.\r\n    //I will not give up at all.In the next project will be way improved than this\r\n    //Thank you so much Udacity reviewer, and thanks to Udacity, it helped me alot:D .\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{title}</h2>\r\n        <div className=\"bookshelf-books\" />\r\n\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {Book.map(Book => (\r\n              <li key={Book.id}>\r\n                <div className=\"book\">\r\n                  <div className=\"book-top\">\r\n                    <div\r\n                      className=\"book-cover\"\r\n                      style={{\r\n                        width: 128,\r\n                        height: 192,\r\n                        backgroundImage:\r\n                          Book.imageLinks && Book.imageLinks.smallThumbnail\r\n                            ? `url(${Book.imageLinks.smallThumbnail})`\r\n                            : \"no Image\"\r\n                      }}\r\n                    />\r\n                    <div className=\"book-shelf-changer\">\r\n                      <select\r\n                        onChange={e => {\r\n                          onChangeShelf(e.target.value, Book);\r\n                        }}\r\n                        value={Book.shelf ? Book.shelf : \"none\"}\r\n                      >\r\n                        <option value=\"move\" disabled>\r\n                          Move to...\r\n                        </option>\r\n                        <option value=\"currentlyReading\">\r\n                          Currently Reading\r\n                        </option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\">None</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"book-title\">{Book.title}</div>\r\n                  <div className=\"book-authors\">\r\n                    {(Book.authors && Book.authors.length) > 1\r\n                      ? Book.authors.join(\", \")\r\n                      : Book.authors}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBookRow.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  Book: PropTypes.array.isRequired,\r\n  onChangeShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BookRow;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport BookRow from \"./BookRow\";\r\n\r\nclass BookTable extends Component {\r\n  render() {\r\n    const { AllBooks } = this.props;\r\n    // Please if there is any notes or any improvement, please tell me.\r\n    //I really appreciate your reviewing to my app , I hope you like it.\r\n    //I promise I'm improving myself and I will be better and better.\r\n    //I will not give up at all.In the next project will be way improved than this\r\n    //Thank you so much Udacity reviewer, and thanks to Udacity, it helped me alot:D .\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div className=\"list-books-content\" />\r\n\r\n          <BookRow\r\n            title=\"Currently Reading\"\r\n            Book={AllBooks.filter(book => book.shelf === \"currentlyReading\")}\r\n            onChangeShelf={this.props.onChangeShelf}\r\n          />\r\n\r\n          <BookRow\r\n            title=\"Want To Read\"\r\n            Book={AllBooks.filter(book => book.shelf === \"wantToRead\")}\r\n            onChangeShelf={this.props.onChangeShelf}\r\n          />\r\n\r\n          <BookRow\r\n            title=\"Read\"\r\n            Book={AllBooks.filter(book => book.shelf === \"read\")}\r\n            onChangeShelf={this.props.onChangeShelf}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBookTable.propTypes = {\r\n  AllBooks: PropTypes.array.isRequired,\r\n  onChangeShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BookTable;\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport BookTable from \"./BookTable\";\r\n\r\nclass BookShelves extends Component {\r\n  state = {\r\n    AllBooks: [],\r\n    SearchValue: \"\",\r\n    BooksSearchQuery: [],\r\n    flip: false\r\n  };\r\n  // Please if there is any notes or any improvement, please tell me.\r\n  //I really appreciate your reviewing to my app , I hope you like it.\r\n  //I promise I'm improving myself and I will be better and better.\r\n  //I will not give up at all.In the next project will be way improved than this\r\n  //Thank you so much Udacity reviewer, and thanks to Udacity, it helped me alot:D .\r\n  async componentDidMount() {\r\n    const books = await BooksAPI.getAll();\r\n    this.setState(() => ({\r\n      AllBooks: books\r\n    }));\r\n  }\r\n  handleSearch = query => {\r\n    this.setState(() => ({ SearchValue: query }));\r\n    BooksAPI.search(query).then(BooksSearchQuery => {\r\n      if (BooksSearchQuery && BooksSearchQuery.length > 0) {\r\n        for (let i = 0; i < BooksSearchQuery.length; i++) {\r\n          for (let j = 0; j < this.state.AllBooks.length; j++) {\r\n            if (BooksSearchQuery[i].id === this.state.AllBooks[j].id) {\r\n              const index = this.state.AllBooks.findIndex(\r\n                book => book.id === BooksSearchQuery[i].id\r\n              );\r\n              BooksSearchQuery[i].shelf = this.state.AllBooks[index].shelf;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.setState(() => ({ BooksSearchQuery }));\r\n    });\r\n  };\r\n  ChangeShelf = (shelf, Book) => {\r\n    const updateIndex = this.state.AllBooks.findIndex(b => b.id === Book.id);\r\n    const Books = this.state.AllBooks.map(b => b);\r\n    const updatedBookList = Books;\r\n\r\n    if (updateIndex === -1) {\r\n      Book.shelf = shelf;\r\n      updatedBookList.push(Book);\r\n    } else {\r\n      updatedBookList[updateIndex].shelf = shelf;\r\n      \r\n    }\r\n    this.setState({\r\n      AllBooks: updatedBookList\r\n    });\r\n\r\n    BooksAPI.update(Book, shelf);\r\n\r\n    this.setState(currentState => ({\r\n      flip: !currentState.flip\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Route\r\n            exact\r\n            path=\"/search\"\r\n            render={() => (\r\n              <SearchBar\r\n                AllBooks={this.state.AllBooks}\r\n                searchValue={this.state.SearchValue}\r\n                BooksSearchQuery={this.state.BooksSearchQuery}\r\n                onSearch={this.handleSearch}\r\n                onChangeShelf={this.ChangeShelf}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => (\r\n              <BookTable\r\n                onChangeShelf={this.ChangeShelf}\r\n                AllBooks={this.state.AllBooks}\r\n              />\r\n            )}\r\n          />\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\" className=\"button\">\r\n              Search\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelves;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport BookShelves from \"./BookShelves\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <BookShelves />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}